name: 编译OpenWrt

on:
  workflow_dispatch:
#   push:
#     paths:
#       - '.config'
      
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
#   REPO_URL: https://github.com/immortalwrt/immortalwrt
#   REPO_BRANCH: openwrt-21.02
#   REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  TZ: Asia/Shanghai
  
jobs:
  build-openwrt:
    runs-on: ubuntu-20.04
    
    steps:
      - name: 初始化
        uses: actions/checkout@main
      
      - name: 电报机器人通知
        run: |
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=🎉 主人：您正在编译Openwrt固件,请耐心等待...... 😋" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"

      - name: 安装编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          curl -s https://build-scripts.immortalwrt.eu.org/init_build_environment.sh | sudo bash
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          
      - name: 下载源码
        working-directory: /workdir
        run: |
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
                  
      - name: 更新源
        run: |
          cd openwrt
          ./scripts/feeds update -a
          
      - name: 加载自定义源
        run: |
          chmod +x $DIY_P1_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P1_SH
          
      - name: 安装源
        run: |
          cd openwrt
          ./scripts/feeds install -a
          ./scripts/feeds install -a
          
      - name: 加载自定义配置
        run: |
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
          chmod +x $DIY_P2_SH
          cd openwrt
          $GITHUB_WORKSPACE/$DIY_P2_SH
          
      - name: 缓存加速
        uses: klever1988/cachewrtbuild@main
        with:
#           clean: true
          ccache: true
          prefix: ${{ github.workspace }}/openwrt
          
      - name: 下载软件包
        run: |
          cd openwrt
          echo -e 'CONFIG_DEVEL=y\nCONFIG_CCACHE=y' >> .config
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          
      - name: 编译固件
        run: |
          cd openwrt
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

      - name: 整理文件
        run: |
          cd openwrt/bin/targets/*/*
          find -name "*buildinfo*" | xargs -i rm -rf {}
          find -name "*sha256sums*" | xargs -i rm -rf {}
          find -name "*manifest*" | xargs -i rm -rf {}
          find -name "*vmlinuz*" | xargs -i rm -rf {}
          find -name "*Image*" | xargs -i rm -rf {}
          find -name "*rootfs*" | xargs -i rm -rf {}
          find -name "*kernel*" | xargs -i rm -rf {}
          rm -rf packages
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          
      - name: 上传固件至Github
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: ${{ env.FIRMWARE }}

      - name: 电报机器人通知
        run: |
          curl -k --data chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" --data "text=我亲爱的✨主人✨：您的Openwrt固件顺利编译完成了！💐" "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage"
