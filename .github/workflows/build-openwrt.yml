name: 编译OpenWrt

on:
  workflow_dispatch:
      
jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Free the Ubuntu disk space
      uses: endersonmenezes/free-disk-space@v2
      with:
        remove_android: true
        remove_dotnet: true
        remove_haskell: true
        remove_tool_cache: true
        remove_swap: true
        remove_packages: "azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox postgresql* temurin-* *llvm* mysql* dotnet-sdk-*"
        remove_packages_one_command: true
        remove_folders: "/usr/share/swift /usr/share/miniconda /usr/share/az* /usr/share/glade* /usr/local/lib/node_modules /usr/local/share/chromium /usr/local/share/powershell"
        testing: false

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        # bash <(curl -fsSL https://raw.githubusercontent.com/281677160/common/main/custom/ubuntu.sh)
        # sudo sh -c 'echo openwrt > /etc/oprelyon'
        # if [[ `gcc --version |grep -c "buntu 13"` -eq '0' ]]; then
        #   sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        #   sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa
        #   sudo apt-get install -y gcc-13
        #   sudo apt-get install -y g++-13
        #   sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 60 --slave /usr/bin/g++ g++ /usr/bin/g++-13
        #   gcc --version
        # fi
        # sudo timedatectl set-timezone "Asia/Shanghai"
        # sudo mkdir -p /workdir
        # sudo chown $USER:$GROUPS /workdir
    
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
        # REPO_URL: https://github.com/immortalwrt/immortalwrt
        # REPO_BRANCH: openwrt-24.10
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
                  
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
          
    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: '.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
          
    - name: Cache Acceleration
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: true
        prefix: ${{ github.workspace }}/openwrt
          
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s

    - name: Clean File
      run: |
        cd openwrt/bin/targets/*/*
        find -name "*buildinfo*" | xargs -i rm -rf {}
        find -name "*manifest*" | xargs -i rm -rf {}
        find -name "*kernel.bin*" | xargs -i rm -rf {}
        find -name "*rootfs.img.gz*" | xargs -i rm -rf {}
        find -name "*rootfs.tar.gz*" | xargs -i rm -rf {}
        find -name "*profiles*" | xargs -i rm -rf {}
        find -name "*sha256sums*" | xargs -i rm -rf {}
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: ${{ env.FIRMWARE }}
