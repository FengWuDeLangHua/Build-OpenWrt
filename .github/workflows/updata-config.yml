name: 更新配置文件

on:
  workflow_dispatch:
    inputs:
      KEEP_WORKFLOWS:
        description: '清理workflows,保留[X]个runs不被清理'
        required: true
        default: '5'
      KEEP_RELEASES:
        description: '清理Releases,保留[X]个Releases不被清理'
        required: true
        default: '0'
      SSH_ACTION:
        description: 'SSH远程配置固件'
        required: false
        default: 'false'
        type: boolean
      READ_CONGIF:
        description: '读取本地配置'
        required: false
        default: 'true'
        type: boolean

env:
  REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
  KEEP_WORKFLOWS: ${{inputs.KEEP_WORKFLOWS}}
  KEEP_RELEASES: ${{inputs.KEEP_RELEASES}}
  SSH_ACTION: ${{inputs.SSH_ACTION}}
  READ_CONGIF: ${{inputs.READ_CONGIF}}
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 准备结束
      uses: actions/checkout@v4

    - name: 部署编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y gawk git gettext libssl-dev xsltproc zip git-core wget curl grep python3 python3-pip libpython3-dev
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
          
    - name: 下载openwrt源码
      env: 
        # REPO_URL: https://github.com/immortalwrt/immortalwrt
        # REPO_BRANCH: openwrt-24.10
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
          
    - name: 源码依赖拉取
      run: |
        cd openwrt
        sed -i "s:src-git luci https://github.com/coolsnowwolf/luci.git;openwrt-23.05:#src-git luci https://github.com/coolsnowwolf/luci.git;openwrt-23.05:g" feeds.conf.default
        sed -i "s:#src-git luci https://github.com/coolsnowwolf/luci.git;openwrt-24.10:src-git luci https://github.com/coolsnowwolf/luci.git;openwrt-24.10:g" feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
          
    - name: 运行自定义文件
      env:
        CONFIG_FILE: '.config'
      run: |
        if [[ "${READ_CONGIF}" == "true" ]]; then
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        fi
        chmod +x ./customize.sh
        cd openwrt && $GITHUB_WORKSPACE/customize.sh
          
    - name: SSH远程连接
      # uses: csexton/debugger-action@master
      if: env.SSH_ACTION == 'true'
      uses: danshui-git/debugger-action@main
      with:
        gh_token: ${{ env.REPO_TOKEN }}
   
    - name: 提取config文件
      env:
        CONFIG_FILE: '.config'
      run: |
        cd openwrt && make defconfig
        ./scripts/diffconfig.sh > ${GITHUB_WORKSPACE}/$CONFIG_FILE
          
    - name: 提交并推送到仓库
      env:
        CONFIG_FILE: '.config'
      run: |
        git config --global user.email "FengWuDeLangHua@users.noreply.github.com"
        git config --global user.name "FengWuDeLangHua"
        git clone https://user:${{ secrets.REPO_TOKEN }}@github.com/${{github.repository}}.git UPLOAD
        cd UPLOAD
        echo "$(date +%Y年%m月%d号%H时%M分%S秒)" > "./start"
        if [[ -n "$(ls -A "$CONFIG_FILE" 2>/dev/null)" ]]; then
          git rm -rf $CONFIG_FILE
        fi
        cp -Rf $GITHUB_WORKSPACE/$CONFIG_FILE $CONFIG_FILE
        git add .
        git commit -m "编译OpenWrt"
        git push --force "https://${{ secrets.REPO_TOKEN }}@github.com/${{github.repository}}" HEAD:main

    - name: 清理releases和workflows
      continue-on-error: true
      uses: danshui-git/delete-releases-workflows@main
      with:
        delete_releases: true
        prerelease_option: all
        releases_keep_keyword: targz/Update
        releases_keep_latest: ${{ env.KEEP_RELEASES }}
        delete_tags: true
        max_releases_fetch: 300
        delete_workflows: true
        workflows_keep_latest: ${{ env.KEEP_WORKFLOWS }}
        max_workflows_fetch: 300
        repo: ${{ github.repository }}
        gh_token: ${{ secrets.REPO_TOKEN }}
